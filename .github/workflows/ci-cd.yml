name: CI/CD Pipeline

on:
  pull_request:
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

      - name: Start application
        run: |
          docker-compose up -d app
          docker ps

      - name: Wait for the application to be ready
        run: |
          echo "Waiting for web service to be healthy..."
          for i in {1..5}; do
            if curl -sSf http://localhost:3000 > /dev/null; then
              echo "Web service is up!"
              exit 0
            fi
            echo "Waiting for web service to be up ($i/5)..."
            sleep 5
          done
          echo "Web service did not start in time"
          exit 1

      - name: Run Selenium tests
        run: npm run test:e2e

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: mochawesome-report/mochawesome.html
      # - name: Build Docker image
      #   run: docker build . -t your-dockerhub-username/ci-cd-blog:latest

      # - name: Push Docker image
      #   run: docker push your-dockerhub-username/ci-cd-blog:latest
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Deploy to AWS
      #   run: |
      #     aws ecs update-service --cluster your-cluster --service your-service --force-new-deployment
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: 'us-east-1'
      #     MONGO_URL: ${{ secrets.MONGO_URL }}
